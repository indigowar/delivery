version: '3'

services:
  traefik:
    container_name: 'traefik'
    image: traefik:v2.5
    privileged: true
    networks:
      - proxy-network 
    command:
      - '--log.level=WARNING'
      - '--api.insecure=true'
      - '--providers.docker=true'
      - '--providers.docker.exposedbydefault=false'
      - '--providers.docker.network=proxy-network'
    ports:
      - '80:80'
      - '8080:8080'
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  accounts_service:
    container_name: 'accounts'
    build:
      context: ./..
      dockerfile: ./build/accounts.dockerfile
    networks:
      - proxy-network
      - accounts-network
    depends_on:
      - accounts_database
    restart: on-failure
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.accounts.rule=Host(`accounts.localhost`)'
      - 'traefik.http.services.accounts.loadbalancer.server.port=80'
    environment:
      POSTGRES_DB: 'accounts'
      POSTGRES_USER: ${ACCOUNTS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${ACCOUNTS_POSTGRES_PASSWORD}
      POSTGRES_PORT: 5432
      POSTGRES_HOST: 'accounts_database'

  accounts_database:
    container_name: 'accounts_database'
    image: postgres:15-alpine
    networks:
      - accounts-network
    volumes:
      - ../.volumes/accounts_db:/var/lib/postgresql/data:Z
    environment:
      POSTGRES_DB: 'accounts'
      POSTGRES_USER: ${ACCOUNTS_POSTGRES_USER}
      POSTGRES_PASSWORD: ${ACCOUNTS_POSTGRES_PASSWORD}
      

  auth_service:
    container_name: 'auth'
    build:
      context: ./..
      dockerfile: ./build/auth.dockerfile
    networks:
      - proxy-network
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.auth.rule=Host(`auth.localhost`)'
      - 'traefik.http.services.auth.loadbalancer.server.port=80'
    environment:
      REDIS_PASSWORD: ${AUTH_SESSION_STORAGE_REDIS_PASSWORD}
      REDIS_PORT: 6379
      
  auth_session_storage:
    container_name: 'auth_session_storage'
    image: redis:7.2-alpine
    networks:
      - auth-network
    environment:
      REDIS_PASSWORD: ${AUTH_SESSION_STORAGE_REDIS_PASSWORD}

  pgadmin:
    container_name: 'pg_admin'
    image: elestio/pgadmin:latest
    restart: on-failure
    networks:
      - proxy-network
      - accounts-network
    labels:
      - 'traefik.enable=true'
      - 'traefik.http.routers.pg_admin.rule=Host(`pgadmin.localhost`)'
      - 'traefik.http.services.pg_admin.loadbalancer.server.port=8080'
    environment:
      PGADMIN_DEFAULT_EMAIL: example@mail.com
      PGADMIN_DEFAULT_PASSWORD: 'strong_password'
      PGADMIN_LISTEN_PORT: 8080

      ACCOUNT_DB_HOST: 'accounts_db'
      ACCOUNT_DB_PORT: 5432
      ACCOUNT_DB_USER: ${ACCOUNTS_POSTGRES_USER}
      ACCOUNT_DB_PASSWORD: ${ACCOUNTS_POSTGRES_PASSWORD}
      ACCOUNT_DB_NAME: 'accounts'
    volumes:
      - ../config/pg_admin.servers.json:/pgadmin4/servers.json

networks:
  proxy-network:
    name: proxy-network
  accounts-network:
  auth-network:
